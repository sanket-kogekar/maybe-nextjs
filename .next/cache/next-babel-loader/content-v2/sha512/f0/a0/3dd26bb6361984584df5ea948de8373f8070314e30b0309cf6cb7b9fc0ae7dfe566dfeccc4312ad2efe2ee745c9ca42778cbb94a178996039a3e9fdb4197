{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"C:/Users/KogoKing/entrepreneur/github/maybe-finance/code-challenge-nextjs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\KogoKing\\\\entrepreneur\\\\github\\\\maybe-finance\\\\code-challenge-nextjs\\\\components\\\\Filters.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Grid from \"@material-ui/core/Grid\";\nvar top100Films = [{\n  title: \"The Shawshank Redemption\",\n  year: 1994\n}, {\n  title: \"The Godfather\",\n  year: 1972\n}, {\n  title: \"The Godfather: Part II\",\n  year: 1974\n}];\n\nfunction Filters() {\n  var _this = this;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          id: \"name\",\n          name: \"name\",\n          options: top100Films,\n          getOptionLabel: function getOptionLabel(option) {\n            return option.title;\n          },\n          style: {\n            width: 300\n          },\n          renderInput: function renderInput(params) {\n            return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n              label: \"Combo box\",\n              variant: \"outlined\"\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          id: \"iata\",\n          name: \"iata\",\n          options: top100Films,\n          getOptionLabel: function getOptionLabel(option) {\n            return option.title;\n          },\n          style: {\n            width: 300\n          },\n          renderInput: function renderInput(params) {\n            return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n              label: \"Combo box\",\n              variant: \"outlined\"\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      id: \"city\",\n      name: \"city\",\n      options: top100Films,\n      getOptionLabel: function getOptionLabel(option) {\n        return option.title;\n      },\n      style: {\n        width: 300\n      },\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: \"Combo box\",\n          variant: \"outlined\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      id: \"country\",\n      name: \"country\",\n      options: top100Films,\n      getOptionLabel: function getOptionLabel(option) {\n        return option.title;\n      },\n      style: {\n        width: 300\n      },\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: \"Combo box\",\n          variant: \"outlined\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Filters;\nexport default Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"sources":["C:/Users/KogoKing/entrepreneur/github/maybe-finance/code-challenge-nextjs/components/Filters.js"],"names":["React","TextField","Autocomplete","Grid","top100Films","title","year","Filters","option","width","params"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst top100Films = [\r\n  { title: \"The Shawshank Redemption\", year: 1994 },\r\n  { title: \"The Godfather\", year: 1972 },\r\n  { title: \"The Godfather: Part II\", year: 1974 },\r\n];\r\n\r\nfunction Filters() {\r\n  return (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Autocomplete\r\n            id=\"name\"\r\n            name=\"name\"\r\n            options={top100Films}\r\n            getOptionLabel={(option) => option.title}\r\n            style={{ width: 300 }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Combo box\" variant=\"outlined\" />\r\n            )}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Autocomplete\r\n            id=\"iata\"\r\n            name=\"iata\"\r\n            options={top100Films}\r\n            getOptionLabel={(option) => option.title}\r\n            style={{ width: 300 }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Combo box\" variant=\"outlined\" />\r\n            )}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Autocomplete\r\n        id=\"city\"\r\n        name=\"city\"\r\n        options={top100Films}\r\n        getOptionLabel={(option) => option.title}\r\n        style={{ width: 300 }}\r\n        renderInput={(params) => (\r\n          <TextField {...params} label=\"Combo box\" variant=\"outlined\" />\r\n        )}\r\n      />\r\n\r\n      <Autocomplete\r\n        id=\"country\"\r\n        name=\"country\"\r\n        options={top100Films}\r\n        getOptionLabel={(option) => option.title}\r\n        style={{ width: 300 }}\r\n        renderInput={(params) => (\r\n          <TextField {...params} label=\"Combo box\" variant=\"outlined\" />\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filters;\r\n"]},"metadata":{},"sourceType":"module"}