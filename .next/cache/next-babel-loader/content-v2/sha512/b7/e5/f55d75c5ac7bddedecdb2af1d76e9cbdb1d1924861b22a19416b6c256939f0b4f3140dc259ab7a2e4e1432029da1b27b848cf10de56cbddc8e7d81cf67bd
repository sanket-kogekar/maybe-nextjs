{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\KogoKing\\\\entrepreneur\\\\github\\\\maybe-finance\\\\code-challenge-nextjs\\\\components\\\\Filters.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nconst top100Films = [{\n  title: \"The Shawshank Redemption\",\n  year: 1994\n}, {\n  title: \"The Godfather\",\n  year: 1972\n}, {\n  title: \"The Godfather: Part II\",\n  year: 1974\n}];\n\nfunction Filters() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            id: \"name\",\n            name: \"name\",\n            options: top100Films,\n            getOptionLabel: option => option.title,\n            style: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n              label: \"Combo box\",\n              variant: \"outlined\"\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            id: \"iata\",\n            name: \"iata\",\n            options: top100Films,\n            getOptionLabel: option => option.title,\n            style: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n              label: \"Combo box\",\n              variant: \"outlined\"\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            id: \"city\",\n            name: \"city\",\n            options: top100Films,\n            getOptionLabel: option => option.title,\n            style: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n              label: \"Combo box\",\n              variant: \"outlined\"\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            id: \"country\",\n            name: \"country\",\n            options: top100Films,\n            getOptionLabel: option => option.title,\n            style: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n              label: \"Combo box\",\n              variant: \"outlined\"\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\nexport default Filters;","map":{"version":3,"sources":["C:/Users/KogoKing/entrepreneur/github/maybe-finance/code-challenge-nextjs/components/Filters.js"],"names":["React","TextField","Autocomplete","Grid","Paper","top100Films","title","year","Filters","classes","paper","option","width","params"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst top100Films = [\r\n  { title: \"The Shawshank Redemption\", year: 1994 },\r\n  { title: \"The Godfather\", year: 1972 },\r\n  { title: \"The Godfather: Part II\", year: 1974 },\r\n];\r\n\r\nfunction Filters() {\r\n  return (\r\n    <>\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={3}>\r\n            <Autocomplete\r\n              id=\"name\"\r\n              name=\"name\"\r\n              options={top100Films}\r\n              getOptionLabel={(option) => option.title}\r\n              style={{ width: 300 }}\r\n              renderInput={(params) => (\r\n                <TextField {...params} label=\"Combo box\" variant=\"outlined\" />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Autocomplete\r\n              id=\"iata\"\r\n              name=\"iata\"\r\n              options={top100Films}\r\n              getOptionLabel={(option) => option.title}\r\n              style={{ width: 300 }}\r\n              renderInput={(params) => (\r\n                <TextField {...params} label=\"Combo box\" variant=\"outlined\" />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Autocomplete\r\n              id=\"city\"\r\n              name=\"city\"\r\n              options={top100Films}\r\n              getOptionLabel={(option) => option.title}\r\n              style={{ width: 300 }}\r\n              renderInput={(params) => (\r\n                <TextField {...params} label=\"Combo box\" variant=\"outlined\" />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Autocomplete\r\n              id=\"country\"\r\n              name=\"country\"\r\n              options={top100Films}\r\n              getOptionLabel={(option) => option.title}\r\n              style={{ width: 300 }}\r\n              renderInput={(params) => (\r\n                <TextField {...params} label=\"Combo box\" variant=\"outlined\" />\r\n              )}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filters;\r\n"]},"metadata":{},"sourceType":"module"}