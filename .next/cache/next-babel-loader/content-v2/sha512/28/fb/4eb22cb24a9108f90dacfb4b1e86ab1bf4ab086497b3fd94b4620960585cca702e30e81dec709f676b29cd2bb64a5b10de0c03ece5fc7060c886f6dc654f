{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\KogoKing\\\\entrepreneur\\\\github\\\\maybe-finance\\\\code-challenge-nextjs\\\\pages\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/layout\";\nimport { getNames, getIataList, getCountries, getCities } from \"../hooks/use-api-data\";\n// import { useForm, FormProvider, Controller } from \"react-hook-form\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { useForm } from \"react-hook-form\";\nimport { TextField } from \"@material-ui/core\"; //import Autocomplete from \"./../components/Autocomplete\";\n\nconst Page = () => {\n  let airports; //= useApiData<Airport[]>(\"/api/airports\", []);\n\n  const airportNames = getNames(\"/api/names\", []);\n  const airportIataList = getIataList(\"/api/iata-list\", []);\n  const countries = getCountries(\"/api/countries\", []);\n  const cities = getCities(\"/api/cities\", [], null); //const [cityOptions, setCityOptions] = useState(getCities<City[]>('/api/cities', []))\n  //const [cities, setCities] = useState(getCities<City[]>('/api/cities', [], null))\n\n  const c = getCountries(\"/api/countries\", []);\n  console.log(\"c\", c); // const countries = [...new Map(c.map(item => [item[name], item])).values()]\n\n  const initialState = {\n    name: \"\",\n    iata: \"\",\n    country: \"\",\n    city: \"\"\n  };\n  const {\n    0: filterObject,\n    1: setFilterObject\n  } = useState(initialState);\n  console.log(\"filterObject\", filterObject);\n\n  const resetFilters = () => {\n    setFilterObject(initialState);\n  };\n\n  const {\n    0: cityOptions,\n    1: setCityOptions\n  } = useState(cities);\n  useEffect(() => {\n    if (!!filterObject && !!filterObject.country) {\n      //let cities = getCities<City[]>('/api/cities', [], filterObject.country)\n      let newOptions = [];\n      cities.map(item => {\n        console.log(\"item\", item);\n        console.log(\"item.country === filterObject.country\", item.country === filterObject.country);\n\n        if (item.country === filterObject.country) {\n          console.log(\"from IF\", {\n            name: item.name,\n            country: item.country\n          });\n          newOptions.push({\n            name: item.name,\n            country: item.country\n          }); // return {\n          //   name: item.name,\n          //   country: item.country\n          // }\n        }\n      });\n      console.log(\"newOptions\", newOptions);\n      setCityOptions(newOptions);\n    }\n  }, [filterObject]); // const updateCitiesList = (country) =>{\n  //   if(!!cityOptions && cityOptions.length > 0){\n  //     let newOptions = cityOptions.filter((option) => {\n  //       return option.country === country\n  //     })\n  //     setCityOptions(newOptions)\n  //   }\n  // }\n  //\n  // const form = useForm({\n  //   defaultValues: {\n  //     firstName: \"\",\n  //     lastName: \"\",\n  //     age: \"\",\n  //     gender: \"male\",\n  //     hobbies: [\"cooking\", \"coding\"],\n  //   },\n  // });\n  // const onSubmit = (data) => console.log(data);\n  // const onError = (error) => console.log(error);\n  //\n  //\n\n  const options = [{\n    label: \"Chocolate\",\n    value: \"chocolate\"\n  }, {\n    label: \"Strawberry\",\n    value: \"strawberry\"\n  }, {\n    label: \"Vanilla\",\n    value: \"vanilla\"\n  }];\n  const {\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      autocomplete: [],\n      select: []\n    }\n  });\n  const onSubmit = handleSubmit(data => console.log(data)); //\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl\",\n      children: \"\\xA0\\xA0Code Challenge: Airports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"15px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: options,\n          getOptionLabel: option => option.label,\n          onChange: (e, options) => {\n            console.log(\"op\", options);\n            setValue(\"autocomplete\", {\n              label: options.label,\n              value: options.string\n            });\n          },\n          renderInput: params => {\n            var _errors$autocomplete;\n\n            return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n              error: Boolean(errors === null || errors === void 0 ? void 0 : errors.autocomplete),\n              helperText: errors === null || errors === void 0 ? void 0 : (_errors$autocomplete = errors.autocomplete) === null || _errors$autocomplete === void 0 ? void 0 : _errors$autocomplete.message\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-10 text-xl\",\n      children: \"\\xA0\\xA0List of Airports (Sorted A-Z):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!!airports && airports.map(airport => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `/airports/${airport.iata.toLowerCase()}`,\n        className: \"mt-5 flex items-center shadow p-5 border\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [airport.name, \", \", airport.city]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-auto text-mono\",\n          children: airport.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this)]\n      }, airport.iata, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), !airports && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\xA0\\xA0[ Please click on 'Search' to view the list of Available Airports! ]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Page;","map":{"version":3,"sources":["C:/Users/KogoKing/entrepreneur/github/maybe-finance/code-challenge-nextjs/pages/index.tsx"],"names":["React","useState","useEffect","Layout","getNames","getIataList","getCountries","getCities","Autocomplete","useForm","TextField","Page","airports","airportNames","airportIataList","countries","cities","c","console","log","initialState","name","iata","country","city","filterObject","setFilterObject","resetFilters","cityOptions","setCityOptions","newOptions","map","item","push","options","label","value","register","handleSubmit","watch","setValue","formState","errors","defaultValues","autocomplete","select","onSubmit","data","padding","option","e","string","params","Boolean","message","airport","toLowerCase"],"mappings":"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","sourcesContent":["import { NextPage } from \"next\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../components/layout\";\r\nimport useApiData, {\r\n  getNames,\r\n  getIataList,\r\n  getCountries,\r\n  getCities,\r\n} from \"../hooks/use-api-data\";\r\nimport Airport from \"../types/airport\";\r\nimport AirportName from \"../types/airport-name\";\r\nimport AirportIata from \"../types/airport-iata\";\r\nimport City from \"../types/city\";\r\nimport Country from \"../types/country\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n// import { useForm, FormProvider, Controller } from \"react-hook-form\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { useForm, NestedValue } from \"react-hook-form\";\r\nimport { TextField, Select } from \"@material-ui/core\";\r\n//import Autocomplete from \"./../components/Autocomplete\";\r\n\r\nconst Page: NextPage = () => {\r\n  let airports; //= useApiData<Airport[]>(\"/api/airports\", []);\r\n  const airportNames = getNames<AirportName[]>(\"/api/names\", []);\r\n  const airportIataList = getIataList<AirportIata[]>(\"/api/iata-list\", []);\r\n  const countries = getCountries<Country[]>(\"/api/countries\", []);\r\n  const cities = getCities<City[]>(\"/api/cities\", [], null);\r\n  //const [cityOptions, setCityOptions] = useState(getCities<City[]>('/api/cities', []))\r\n  //const [cities, setCities] = useState(getCities<City[]>('/api/cities', [], null))\r\n  const c = getCountries<Country[]>(\"/api/countries\", []);\r\n  console.log(\"c\", c);\r\n  // const countries = [...new Map(c.map(item => [item[name], item])).values()]\r\n\r\n  const initialState = {\r\n    name: \"\",\r\n    iata: \"\",\r\n    country: \"\",\r\n    city: \"\",\r\n  };\r\n\r\n  const [filterObject, setFilterObject] = useState(initialState);\r\n  console.log(\"filterObject\", filterObject);\r\n\r\n  const resetFilters = () => {\r\n    setFilterObject(initialState);\r\n  };\r\n\r\n  const [cityOptions, setCityOptions] = useState(cities);\r\n\r\n  useEffect(() => {\r\n    if (!!filterObject && !!filterObject.country) {\r\n      //let cities = getCities<City[]>('/api/cities', [], filterObject.country)\r\n      let newOptions = [];\r\n      cities.map((item) => {\r\n        console.log(\"item\", item);\r\n        console.log(\r\n          \"item.country === filterObject.country\",\r\n          item.country === filterObject.country\r\n        );\r\n        if (item.country === filterObject.country) {\r\n          console.log(\"from IF\", {\r\n            name: item.name,\r\n            country: item.country,\r\n          });\r\n          newOptions.push({\r\n            name: item.name,\r\n            country: item.country,\r\n          });\r\n          // return {\r\n          //   name: item.name,\r\n          //   country: item.country\r\n          // }\r\n        }\r\n      });\r\n      console.log(\"newOptions\", newOptions);\r\n      setCityOptions(newOptions);\r\n    }\r\n  }, [filterObject]);\r\n\r\n  // const updateCitiesList = (country) =>{\r\n  //   if(!!cityOptions && cityOptions.length > 0){\r\n  //     let newOptions = cityOptions.filter((option) => {\r\n  //       return option.country === country\r\n  //     })\r\n  //     setCityOptions(newOptions)\r\n  //   }\r\n  // }\r\n\r\n  //\r\n  // const form = useForm({\r\n  //   defaultValues: {\r\n  //     firstName: \"\",\r\n  //     lastName: \"\",\r\n  //     age: \"\",\r\n  //     gender: \"male\",\r\n  //     hobbies: [\"cooking\", \"coding\"],\r\n  //   },\r\n  // });\r\n\r\n  // const onSubmit = (data) => console.log(data);\r\n  // const onError = (error) => console.log(error);\r\n  //\r\n\r\n  //\r\n  type Option = {\r\n    label: string;\r\n    value: string;\r\n  };\r\n\r\n  const options = [\r\n    { label: \"Chocolate\", value: \"chocolate\" },\r\n    { label: \"Strawberry\", value: \"strawberry\" },\r\n    { label: \"Vanilla\", value: \"vanilla\" },\r\n  ];\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm<{\r\n    autocomplete: NestedValue<Option[]>;\r\n    select: NestedValue<number[]>;\r\n  }>({\r\n    defaultValues: { autocomplete: [], select: [] },\r\n  });\r\n\r\n  const onSubmit = handleSubmit((data) => console.log(data));\r\n\r\n  //\r\n\r\n  return (\r\n    <Layout>\r\n      <h1 className=\"text-2xl\">&nbsp;&nbsp;Code Challenge: Airports</h1>\r\n      <br />\r\n      <hr />\r\n      <div style={{ padding: \"15px\" }}>\r\n        <form onSubmit={onSubmit}>\r\n          <Autocomplete\r\n            options={options}\r\n            getOptionLabel={(option: Option) => option.label}\r\n            onChange={(e, options) => {\r\n              console.log(\"op\", options);\r\n              setValue(\"autocomplete\", {\r\n                label: options.label,\r\n                value: options.string,\r\n              });\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                error={Boolean(errors?.autocomplete)}\r\n                helperText={errors?.autocomplete?.message}\r\n              />\r\n            )}\r\n          />\r\n\r\n          {/* <Select\r\n            value=\"\"\r\n            onChange={(e) => setValue(\"muiSelect\", e.target.value as number[])}\r\n          >\r\n            <MenuItem value={10}>Ten</MenuItem>\r\n            <MenuItem value={20}>Twenty</MenuItem>\r\n          </Select> */}\r\n\r\n          <input type=\"submit\" />\r\n        </form>\r\n      </div>\r\n      <hr />\r\n      {/*  */}\r\n      {/*  */}\r\n      <h2 className=\"mt-10 text-xl\">\r\n        &nbsp;&nbsp;List of Airports (Sorted A-Z):\r\n      </h2>\r\n      <div>\r\n        {!!airports &&\r\n          airports.map((airport) => (\r\n            <a\r\n              href={`/airports/${airport.iata.toLowerCase()}`}\r\n              key={airport.iata}\r\n              className=\"mt-5 flex items-center shadow p-5 border\"\r\n            >\r\n              <div>\r\n                {airport.name}, {airport.city}\r\n              </div>\r\n              <div className=\"ml-auto text-mono\">{airport.country}</div>\r\n            </a>\r\n          ))}\r\n        <br />\r\n        {!airports && (\r\n          <h4>\r\n            &nbsp;&nbsp;[ Please click on 'Search' to view the list of Available\r\n            Airports! ]\r\n          </h4>\r\n        )}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}