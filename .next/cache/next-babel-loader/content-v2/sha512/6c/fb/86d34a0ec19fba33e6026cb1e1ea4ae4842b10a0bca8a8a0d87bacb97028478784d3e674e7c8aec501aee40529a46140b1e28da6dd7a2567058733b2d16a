{"ast":null,"code":"import _toConsumableArray from \"C:/Users/KogoKing/entrepreneur/github/maybe-finance/code-challenge-nextjs/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"C:/Users/KogoKing/entrepreneur/github/maybe-finance/code-challenge-nextjs/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"C:/Users/KogoKing/entrepreneur/github/maybe-finance/code-challenge-nextjs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\KogoKing\\\\entrepreneur\\\\github\\\\maybe-finance\\\\code-challenge-nextjs\\\\components\\\\Autocomplete.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport FormField from \"./FormField\";\nimport { FormControl, InputLabel, MenuItem, FormHelperText } from \"@material-ui/core\";\nimport { Autocomplete as MUIAutocomplete } from \"@material-ui/lab\";\nvar Autocomplete = /*#__PURE__*/React.forwardRef(_c = function _c(props, ref) {\n  return /*#__PURE__*/_jsxDEV(FormField, _objectSpread({\n    ref: ref,\n    Component: AutocompleteImpl\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, _this);\n});\n_c2 = Autocomplete;\nvar AutocompleteImpl = /*#__PURE__*/React.forwardRef(_c3 = function _c3(_ref, ref) {\n  var label = _ref.label,\n      _ref$name = _ref.name,\n      name = _ref$name === void 0 ? \"\" : _ref$name,\n      variant = _ref.variant,\n      size = _ref.size,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      error = _ref.error,\n      helperText = _ref.helperText,\n      style = _ref.style,\n      defaultItem = _ref.defaultItem,\n      items = _ref.items,\n      _ref$nameField = _ref.nameField,\n      nameField = _ref$nameField === void 0 ? \"name\" : _ref$nameField,\n      _ref$valueField = _ref.valueField,\n      valueField = _ref$valueField === void 0 ? \"value\" : _ref$valueField,\n      restProps = _objectWithoutProperties(_ref, [\"label\", \"name\", \"variant\", \"size\", \"value\", \"onChange\", \"onBlur\", \"error\", \"helperText\", \"style\", \"defaultItem\", \"items\", \"nameField\", \"valueField\"]);\n\n  var inputId = name.replace(\".\", \"-\");\n  var menuItems = [];\n\n  if (items) {\n    if (defaultItem) {\n      menuItems = [defaultItem].concat(_toConsumableArray(items));\n    } else {\n      menuItems = _toConsumableArray(items);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    variant: variant,\n    size: size,\n    error: error,\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      id: \"\".concat(inputId, \"-label\"),\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(MUIAutocomplete, {\n      labelId: \"\".concat(inputId, \"-label\"),\n      id: inputId,\n      value: value,\n      onChange: onChange,\n      onBlur: onBlur,\n      label: label,\n      ref: ref,\n      children: menuItems.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: item[valueField],\n          children: item[nameField]\n        }, item[valueField], false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n      children: helperText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, _this);\n});\n_c4 = AutocompleteImpl;\nexport default Autocomplete;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Autocomplete$React.forwardRef\");\n$RefreshReg$(_c2, \"Autocomplete\");\n$RefreshReg$(_c3, \"AutocompleteImpl$React.forwardRef\");\n$RefreshReg$(_c4, \"AutocompleteImpl\");","map":{"version":3,"sources":["C:/Users/KogoKing/entrepreneur/github/maybe-finance/code-challenge-nextjs/components/Autocomplete.js"],"names":["React","FormField","FormControl","InputLabel","MenuItem","FormHelperText","Autocomplete","MUIAutocomplete","forwardRef","props","ref","AutocompleteImpl","label","name","variant","size","value","onChange","onBlur","error","helperText","style","defaultItem","items","nameField","valueField","restProps","inputId","replace","menuItems","map","item"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SACEC,WADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,cAJF,QAKO,mBALP;AAMA,SAASC,YAAY,IAAIC,eAAzB,QAAgD,kBAAhD;AAEA,IAAMD,YAAY,gBAAGN,KAAK,CAACQ,UAAN,MAAiB,YAACC,KAAD,EAAQC,GAAR;AAAA,sBACpC,QAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,GAAhB;AAAqB,IAAA,SAAS,EAAEC;AAAhC,KAAsDF,KAAtD;AAAA;AAAA;AAAA;AAAA,WADoC;AAAA,CAAjB,CAArB;MAAMH,Y;AAIN,IAAMK,gBAAgB,gBAAGX,KAAK,CAACQ,UAAN,OACvB,mBAkBEE,GAlBF,EAmBK;AAAA,MAjBDE,KAiBC,QAjBDA,KAiBC;AAAA,uBAhBDC,IAgBC;AAAA,MAhBDA,IAgBC,0BAhBM,EAgBN;AAAA,MAfDC,OAeC,QAfDA,OAeC;AAAA,MAdDC,IAcC,QAdDA,IAcC;AAAA,MAbDC,KAaC,QAbDA,KAaC;AAAA,MAZDC,QAYC,QAZDA,QAYC;AAAA,MAXDC,MAWC,QAXDA,MAWC;AAAA,MAVDC,KAUC,QAVDA,KAUC;AAAA,MATDC,UASC,QATDA,UASC;AAAA,MARDC,KAQC,QARDA,KAQC;AAAA,MAPDC,WAOC,QAPDA,WAOC;AAAA,MANDC,KAMC,QANDA,KAMC;AAAA,4BALDC,SAKC;AAAA,MALDA,SAKC,+BALW,MAKX;AAAA,6BAJDC,UAIC;AAAA,MAJDA,UAIC,gCAJY,OAIZ;AAAA,MAHEC,SAGF;;AACH,MAAMC,OAAO,GAAGd,IAAI,CAACe,OAAL,CAAa,GAAb,EAAkB,GAAlB,CAAhB;AAEA,MAAIC,SAAS,GAAG,EAAhB;;AACA,MAAIN,KAAJ,EAAW;AACT,QAAID,WAAJ,EAAiB;AACfO,MAAAA,SAAS,IAAIP,WAAJ,4BAAoBC,KAApB,EAAT;AACD,KAFD,MAEO;AACLM,MAAAA,SAAS,sBAAON,KAAP,CAAT;AACD;AACF;;AAED,sBACE,QAAC,WAAD;AAAa,IAAA,OAAO,EAAET,OAAtB;AAA+B,IAAA,IAAI,EAAEC,IAArC;AAA2C,IAAA,KAAK,EAAEI,KAAlD;AAAyD,IAAA,KAAK,EAAEE,KAAhE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,EAAE,YAAKM,OAAL,WAAd;AAAA,gBAAqCf;AAArC;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,eAAD;AACE,MAAA,OAAO,YAAKe,OAAL,WADT;AAEE,MAAA,EAAE,EAAEA,OAFN;AAGE,MAAA,KAAK,EAAEX,KAHT;AAIE,MAAA,QAAQ,EAAEC,QAJZ;AAKE,MAAA,MAAM,EAAEC,MALV;AAME,MAAA,KAAK,EAAEN,KANT;AAOE,MAAA,GAAG,EAAEF,GAPP;AAAA,gBASGmB,SAAS,CAACC,GAAV,CAAc,UAACC,IAAD;AAAA,4BACb,QAAC,QAAD;AAAiC,UAAA,KAAK,EAAEA,IAAI,CAACN,UAAD,CAA5C;AAAA,oBACGM,IAAI,CAACP,SAAD;AADP,WAAeO,IAAI,CAACN,UAAD,CAAnB;AAAA;AAAA;AAAA;AAAA,iBADa;AAAA,OAAd;AATH;AAAA;AAAA;AAAA;AAAA,aAFF,eAiBE,QAAC,cAAD;AAAA,gBAAiBL;AAAjB;AAAA;AAAA;AAAA;AAAA,aAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAqBD,CArDsB,CAAzB;MAAMT,gB;AAwDN,eAAeL,YAAf","sourcesContent":["import React from \"react\";\r\nimport FormField from \"./FormField\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete as MUIAutocomplete } from \"@material-ui/lab\";\r\n\r\nconst Autocomplete = React.forwardRef((props, ref) => (\r\n  <FormField ref={ref} Component={AutocompleteImpl} {...props} />\r\n));\r\n\r\nconst AutocompleteImpl = React.forwardRef(\r\n  (\r\n    {\r\n      label,\r\n      name = \"\",\r\n      variant,\r\n      size,\r\n      value,\r\n      onChange,\r\n      onBlur,\r\n      error,\r\n      helperText,\r\n      style,\r\n      defaultItem,\r\n      items,\r\n      nameField = \"name\",\r\n      valueField = \"value\",\r\n      ...restProps\r\n    },\r\n    ref\r\n  ) => {\r\n    const inputId = name.replace(\".\", \"-\");\r\n\r\n    let menuItems = [];\r\n    if (items) {\r\n      if (defaultItem) {\r\n        menuItems = [defaultItem, ...items];\r\n      } else {\r\n        menuItems = [...items];\r\n      }\r\n    }\r\n\r\n    return (\r\n      <FormControl variant={variant} size={size} error={error} style={style}>\r\n        <InputLabel id={`${inputId}-label`}>{label}</InputLabel>\r\n        <MUIAutocomplete\r\n          labelId={`${inputId}-label`}\r\n          id={inputId}\r\n          value={value}\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          label={label}\r\n          ref={ref}\r\n        >\r\n          {menuItems.map((item) => (\r\n            <MenuItem key={item[valueField]} value={item[valueField]}>\r\n              {item[nameField]}\r\n            </MenuItem>\r\n          ))}\r\n        </MUIAutocomplete>\r\n        <FormHelperText>{helperText}</FormHelperText>\r\n      </FormControl>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Autocomplete;\r\n"]},"metadata":{},"sourceType":"module"}