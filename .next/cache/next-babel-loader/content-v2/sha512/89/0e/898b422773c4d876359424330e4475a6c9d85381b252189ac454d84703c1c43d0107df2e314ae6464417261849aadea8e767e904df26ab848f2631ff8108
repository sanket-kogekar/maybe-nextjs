{"ast":null,"code":"import _defineProperty from \"C:/Users/KogoKing/entrepreneur/private/maybe-nextjs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\KogoKing\\\\entrepreneur\\\\private\\\\maybe-nextjs\\\\pages\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/layout\";\nimport { getNames, getIataList, getCountries, getCities } from \"../hooks/use-api-data\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { useForm } from \"react-hook-form\";\nimport { TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nvar Page = function Page() {\n  _s();\n\n  var airportNames = getNames(\"/api/names\", []);\n  var airportIataList = getIataList(\"/api/iata-list\", []);\n  var countries = getCountries(\"/api/countries\", []);\n  var cities = getCities(\"/api/cities\", [], null);\n  var c = getCountries(\"/api/countries\", []);\n  var initialState = {\n    name: \"\",\n    iata: \"\",\n    country: \"\",\n    city: \"\"\n  };\n\n  var _useState = useState(initialState),\n      filterObject = _useState[0],\n      setFilterObject = _useState[1];\n\n  var _useState2 = useState(null),\n      currentCountryField = _useState2[0],\n      setCurrentCountryField = _useState2[1];\n\n  var _useState3 = useState(cities),\n      cityOptions = _useState3[0],\n      setCityOptions = _useState3[1];\n\n  useEffect(function () {\n    if (!!currentCountryField) {\n      var newOptions = [];\n      cities.forEach(function (city) {\n        if (city.country === currentCountryField.name) {\n          newOptions.push(city);\n        }\n      });\n      setCityOptions(newOptions);\n    } else {\n      setCityOptions(cities);\n    }\n  }, [currentCountryField]);\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit;\n\n  var _useState4 = useState([]),\n      airports = _useState4[0],\n      setAirports = _useState4[1];\n\n  var getAirportsList = function getAirportsList(filters) {\n    axios({\n      method: \"post\",\n      url: \"/api/airports\",\n      data: filters\n    })[\"catch\"](function (err) {\n      return err.response;\n    }).then(function (response) {\n      setAirports(response.data);\n    });\n  };\n\n  var onSubmit = handleSubmit(function () {\n    getAirportsList(filterObject);\n  });\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl\",\n      children: \"\\xA0\\xA0Code Challenge: Airports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"15px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              id: \"name\",\n              options: airportNames,\n              getOptionLabel: function getOptionLabel(option) {\n                return option.name;\n              },\n              onChange: function onChange(event, option) {\n                if (!!option && !!option.name) {\n                  setFilterObject(_objectSpread(_objectSpread({}, filterObject), {}, {\n                    name: option.name\n                  }));\n                } else {\n                  setFilterObject(_objectSpread(_objectSpread({}, filterObject), {}, {\n                    name: \"\"\n                  }));\n                }\n              },\n              renderInput: function renderInput(params) {\n                return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n                  label: \"Name\",\n                  variant: \"outlined\"\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              id: \"iata\",\n              options: airportIataList,\n              getOptionLabel: function getOptionLabel(option) {\n                return option.name;\n              },\n              onChange: function onChange(event, option) {\n                if (!!option && !!option.name) {\n                  setFilterObject(_objectSpread(_objectSpread({}, filterObject), {}, {\n                    iata: option.name\n                  }));\n                } else {\n                  setFilterObject(_objectSpread(_objectSpread({}, filterObject), {}, {\n                    iata: \"\"\n                  }));\n                }\n              },\n              renderInput: function renderInput(params) {\n                return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n                  label: \"IATA\",\n                  variant: \"outlined\"\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, _objectSpread(_objectSpread({\n              id: \"country\"\n            }, register(\"country\")), {}, {\n              options: countries,\n              getOptionLabel: function getOptionLabel(option) {\n                return option.name;\n              },\n              onChange: function onChange(event, option) {\n                if (!!option && !!option.name) {\n                  setFilterObject(_objectSpread(_objectSpread({}, filterObject), {}, {\n                    country: option.name\n                  }));\n                  setCurrentCountryField(option);\n                } else {\n                  setFilterObject(_objectSpread(_objectSpread({}, filterObject), {}, {\n                    country: \"\"\n                  }));\n                  setCurrentCountryField(\"\");\n                }\n              },\n              renderInput: function renderInput(params) {\n                return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n                  label: \"Country\",\n                  variant: \"outlined\"\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, _this);\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              id: \"city\",\n              options: cityOptions,\n              getOptionLabel: function getOptionLabel(option) {\n                return option.name;\n              },\n              onChange: function onChange(event, option) {\n                if (!!option && !!option.name) {\n                  setFilterObject(_objectSpread(_objectSpread({}, filterObject), {}, {\n                    city: option.name\n                  }));\n                } else {\n                  setFilterObject(_objectSpread(_objectSpread({}, filterObject), {}, {\n                    city: \"\"\n                  }));\n                }\n              },\n              renderInput: function renderInput(params) {\n                return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n                  label: \"City\",\n                  variant: \"outlined\"\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              type: \"submit\",\n              fullWidth: true,\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-10 text-xl\",\n      children: \"\\xA0\\xA0List of Airports (Sorted A-Z):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!!airports && airports.map(function (airport) {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/airports/\".concat(airport.iata.toLowerCase()),\n          className: \"mt-5 flex items-center shadow p-5 border\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [airport.name, \", \", airport.city]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-auto text-mono\",\n            children: airport.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, _this)]\n        }, airport.iata, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, _this), !airports && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\xA0\\xA0[ Please click on 'Search' to view the list of Available Airports! ]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Page, \"XBboeGvfvile5vJMWu3meYLbQBc=\", false, function () {\n  return [useForm];\n});\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["C:/Users/KogoKing/entrepreneur/private/maybe-nextjs/pages/index.tsx"],"names":["React","useState","useEffect","Layout","getNames","getIataList","getCountries","getCities","Grid","Button","Autocomplete","useForm","TextField","axios","Page","airportNames","airportIataList","countries","cities","c","initialState","name","iata","country","city","filterObject","setFilterObject","currentCountryField","setCurrentCountryField","cityOptions","setCityOptions","newOptions","forEach","push","register","handleSubmit","airports","setAirports","getAirportsList","filters","method","url","data","err","response","then","onSubmit","padding","option","event","params","map","airport","toLowerCase"],"mappings":"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","sourcesContent":["import { NextPage } from \"next\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../components/layout\";\r\nimport useApiData, {\r\n  getNames,\r\n  getIataList,\r\n  getCountries,\r\n  getCities,\r\n} from \"../hooks/use-api-data\";\r\nimport Airport from \"../types/airport\";\r\nimport AirportName from \"../types/airport-name\";\r\nimport AirportIata from \"../types/airport-iata\";\r\nimport City from \"../types/city\";\r\nimport Country from \"../types/country\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { useForm, NestedValue, useWatch } from \"react-hook-form\";\r\nimport { TextField, Select } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nconst Page: NextPage = () => {\r\n  const airportNames = getNames<AirportName[]>(\"/api/names\", []);\r\n  const airportIataList = getIataList<AirportIata[]>(\"/api/iata-list\", []);\r\n  const countries = getCountries<Country[]>(\"/api/countries\", []);\r\n  const cities = getCities<City[]>(\"/api/cities\", [], null);\r\n  const c = getCountries<Country[]>(\"/api/countries\", []);\r\n\r\n  const initialState = {\r\n    name: \"\",\r\n    iata: \"\",\r\n    country: \"\",\r\n    city: \"\",\r\n  };\r\n\r\n  const [filterObject, setFilterObject] = useState(initialState);\r\n  const [currentCountryField, setCurrentCountryField] = useState(null);\r\n  const [cityOptions, setCityOptions] = useState(cities);\r\n\r\n  useEffect(() => {\r\n    if (!!currentCountryField) {\r\n      let newOptions = [];\r\n      cities.forEach((city) => {\r\n        if (city.country === currentCountryField.name) {\r\n          newOptions.push(city);\r\n        }\r\n      });\r\n      setCityOptions(newOptions);\r\n    } else {\r\n      setCityOptions(cities);\r\n    }\r\n  }, [currentCountryField]);\r\n\r\n  type FormValues = {\r\n    name: string;\r\n    iata: string;\r\n    country: string;\r\n    city: string;\r\n  };\r\n\r\n  const { register, handleSubmit } = useForm<FormValues>();\r\n\r\n  const [airports, setAirports] = useState([]);\r\n\r\n  const getAirportsList = (filters) => {\r\n    axios({\r\n      method: \"post\",\r\n      url: \"/api/airports\",\r\n      data: filters,\r\n    })\r\n      .catch((err) => err.response)\r\n      .then((response) => {\r\n        setAirports(response.data);\r\n      });\r\n  };\r\n\r\n  const onSubmit = handleSubmit(() => {\r\n    getAirportsList(filterObject);\r\n  });\r\n\r\n  return (\r\n    <Layout>\r\n      <h1 className=\"text-2xl\">&nbsp;&nbsp;Code Challenge: Airports</h1>\r\n      <br />\r\n      <hr />\r\n      {/* Filters */}\r\n      <div style={{ padding: \"15px\" }}>\r\n        <form onSubmit={onSubmit}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={3}>\r\n              <Autocomplete\r\n                id=\"name\"\r\n                options={airportNames}\r\n                getOptionLabel={(option: AirportName) => option.name}\r\n                onChange={(event: any, option: AirportName | null) => {\r\n                  if (!!option && !!option.name) {\r\n                    setFilterObject({ ...filterObject, name: option.name });\r\n                  } else {\r\n                    setFilterObject({ ...filterObject, name: \"\" });\r\n                  }\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} label=\"Name\" variant=\"outlined\" />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Autocomplete\r\n                id=\"iata\"\r\n                options={airportIataList}\r\n                getOptionLabel={(option: AirportIata) => option.name}\r\n                onChange={(event: any, option: AirportIata | null) => {\r\n                  if (!!option && !!option.name) {\r\n                    setFilterObject({ ...filterObject, iata: option.name });\r\n                  } else {\r\n                    setFilterObject({ ...filterObject, iata: \"\" });\r\n                  }\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} label=\"IATA\" variant=\"outlined\" />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Autocomplete\r\n                id=\"country\"\r\n                {...register(\"country\")}\r\n                options={countries}\r\n                getOptionLabel={(option: Country) => option.name}\r\n                onChange={(event: any, option: Country | null) => {\r\n                  if (!!option && !!option.name) {\r\n                    setFilterObject({ ...filterObject, country: option.name });\r\n                    setCurrentCountryField(option);\r\n                  } else {\r\n                    setFilterObject({ ...filterObject, country: \"\" });\r\n                    setCurrentCountryField(\"\");\r\n                  }\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} label=\"Country\" variant=\"outlined\" />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Autocomplete\r\n                id=\"city\"\r\n                options={cityOptions}\r\n                getOptionLabel={(option: City) => option.name}\r\n                onChange={(event: any, option: City | null) => {\r\n                  if (!!option && !!option.name) {\r\n                    setFilterObject({ ...filterObject, city: option.name });\r\n                  } else {\r\n                    setFilterObject({ ...filterObject, city: \"\" });\r\n                  }\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} label=\"City\" variant=\"outlined\" />\r\n                )}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={10}></Grid>\r\n            <Grid item xs={2}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                fullWidth\r\n              >\r\n                Search\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <hr />\r\n      {/*  List of Airports  */}\r\n      <h2 className=\"mt-10 text-xl\">\r\n        &nbsp;&nbsp;List of Airports (Sorted A-Z):\r\n      </h2>\r\n      <div>\r\n        {!!airports &&\r\n          airports.map((airport) => (\r\n            <a\r\n              href={`/airports/${airport.iata.toLowerCase()}`}\r\n              key={airport.iata}\r\n              className=\"mt-5 flex items-center shadow p-5 border\"\r\n            >\r\n              <div>\r\n                {airport.name}, {airport.city}\r\n              </div>\r\n              <div className=\"ml-auto text-mono\">{airport.country}</div>\r\n            </a>\r\n          ))}\r\n        <br />\r\n        {!airports && (\r\n          <h4>\r\n            &nbsp;&nbsp;[ Please click on 'Search' to view the list of Available\r\n            Airports! ]\r\n          </h4>\r\n        )}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}