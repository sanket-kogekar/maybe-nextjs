{"ast":null,"code":"import _defineProperty from \"C:/Users/KogoKing/entrepreneur/github/maybe-finance/code-challenge-nextjs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\KogoKing\\\\entrepreneur\\\\github\\\\maybe-finance\\\\code-challenge-nextjs\\\\pages\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/layout\";\nimport { getNames, getIataList, getCountries, getCities } from \"../hooks/use-api-data\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\"; // import { useForm, FormProvider, Controller } from \"react-hook-form\";\n\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { useForm } from \"react-hook-form\";\nimport { TextField } from \"@material-ui/core\"; //import Autocomplete from \"./../components/Autocomplete\";\n\nvar Page = function Page() {\n  _s();\n\n  var airports; //= useApiData<Airport[]>(\"/api/airports\", []);\n\n  var airportNames = getNames(\"/api/names\", []);\n  var airportIataList = getIataList(\"/api/iata-list\", []);\n  var countries = getCountries(\"/api/countries\", []);\n  var cities = getCities(\"/api/cities\", [], null); //const [cityOptions, setCityOptions] = useState(getCities<City[]>('/api/cities', []))\n  //const [cities, setCities] = useState(getCities<City[]>('/api/cities', [], null))\n\n  var c = getCountries(\"/api/countries\", []); // const countries = [...new Map(c.map(item => [item[name], item])).values()]\n\n  var initialState = {\n    name: \"\",\n    iata: \"\",\n    country: \"\",\n    city: \"\"\n  };\n\n  var _useState = useState(initialState),\n      filterObject = _useState[0],\n      setFilterObject = _useState[1];\n\n  var resetFilters = function resetFilters() {\n    setFilterObject(initialState);\n  };\n\n  var _useState2 = useState(cities),\n      cityOptions = _useState2[0],\n      setCityOptions = _useState2[1];\n\n  useEffect(function () {\n    if (!!filterObject && !!filterObject.country) {\n      //let cities = getCities<City[]>('/api/cities', [], filterObject.country)\n      var newOptions = [];\n      cities.map(function (item) {\n        if (item.country === filterObject.country) {\n          newOptions.push({\n            name: item.name,\n            country: item.country\n          }); // return {\n          //   name: item.name,\n          //   country: item.country\n          // }\n        }\n      });\n      setCityOptions(newOptions);\n    }\n  }, [filterObject]); // const updateCitiesList = (country) =>{\n  //   if(!!cityOptions && cityOptions.length > 0){\n  //     let newOptions = cityOptions.filter((option) => {\n  //       return option.country === country\n  //     })\n  //     setCityOptions(newOptions)\n  //   }\n  // }\n  //\n\n  var _useForm = useForm({\n    defaultValues: {\n      autocomplete: [],\n      select: []\n    }\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch,\n      setValue = _useForm.setValue,\n      errors = _useForm.formState.errors;\n\n  var onSubmit = handleSubmit(function (data) {\n    return console.log(\"onSubmit filterObject\", filterObject);\n  });\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl\",\n      children: \"\\xA0\\xA0Code Challenge: Airports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"15px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              id: \"name\",\n              options: airportNames,\n              getOptionLabel: function getOptionLabel(option) {\n                return option.name;\n              },\n              onChange: function onChange(event, option) {\n                setFilterObject(_objectSpread(_objectSpread({}, filterObject), option));\n              },\n              renderInput: function renderInput(params) {\n                var _errors$autocomplete;\n\n                return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n                  error: Boolean(errors === null || errors === void 0 ? void 0 : errors.autocomplete),\n                  helperText: errors === null || errors === void 0 ? void 0 : (_errors$autocomplete = errors.autocomplete) === null || _errors$autocomplete === void 0 ? void 0 : _errors$autocomplete.message,\n                  label: \"Name\",\n                  variant: \"outlined\"\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              id: \"iata\",\n              options: airportIataList,\n              getOptionLabel: function getOptionLabel(option) {\n                return option.name;\n              },\n              onChange: function onChange(event, option) {\n                setFilterObject(_objectSpread(_objectSpread({}, filterObject), option));\n              },\n              renderInput: function renderInput(params) {\n                var _errors$autocomplete2;\n\n                return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n                  error: Boolean(errors === null || errors === void 0 ? void 0 : errors.autocomplete),\n                  helperText: errors === null || errors === void 0 ? void 0 : (_errors$autocomplete2 = errors.autocomplete) === null || _errors$autocomplete2 === void 0 ? void 0 : _errors$autocomplete2.message,\n                  label: \"IATA\",\n                  variant: \"outlined\"\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              id: \"country\",\n              options: countries,\n              getOptionLabel: function getOptionLabel(option) {\n                return option.name;\n              },\n              onChange: function onChange(event, option) {\n                setFilterObject(_objectSpread(_objectSpread({}, filterObject), option));\n              },\n              renderInput: function renderInput(params) {\n                var _errors$autocomplete3;\n\n                return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n                  error: Boolean(errors === null || errors === void 0 ? void 0 : errors.autocomplete),\n                  helperText: errors === null || errors === void 0 ? void 0 : (_errors$autocomplete3 = errors.autocomplete) === null || _errors$autocomplete3 === void 0 ? void 0 : _errors$autocomplete3.message,\n                  label: \"Country\",\n                  variant: \"outlined\"\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              id: \"city\",\n              options: cities,\n              getOptionLabel: function getOptionLabel(option) {\n                return option.name;\n              },\n              onChange: function onChange(event, option) {\n                setFilterObject(_objectSpread(_objectSpread({}, filterObject), option));\n              },\n              renderInput: function renderInput(params) {\n                var _errors$autocomplete4;\n\n                return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n                  error: Boolean(errors === null || errors === void 0 ? void 0 : errors.autocomplete),\n                  helperText: errors === null || errors === void 0 ? void 0 : (_errors$autocomplete4 = errors.autocomplete) === null || _errors$autocomplete4 === void 0 ? void 0 : _errors$autocomplete4.message,\n                  label: \"City\",\n                  variant: \"outlined\"\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 9\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 1,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"default\",\n              fullWidth: true,\n              onClick: function onClick() {\n                resetFilters();\n              },\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              type: \"submit\",\n              fullWidth: true,\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-10 text-xl\",\n      children: \"\\xA0\\xA0List of Airports (Sorted A-Z):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!!airports && airports.map(function (airport) {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/airports/\".concat(airport.iata.toLowerCase()),\n          className: \"mt-5 flex items-center shadow p-5 border\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [airport.name, \", \", airport.city]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-auto text-mono\",\n            children: airport.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, _this)]\n        }, airport.iata, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, _this), !airports && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\xA0\\xA0[ Please click on 'Search' to view the list of Available Airports! ]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Page, \"74L/KrypK9H/DxfIjH9LqDnwLEs=\", false, function () {\n  return [useForm];\n});\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["C:/Users/KogoKing/entrepreneur/github/maybe-finance/code-challenge-nextjs/pages/index.tsx"],"names":["React","useState","useEffect","Layout","getNames","getIataList","getCountries","getCities","Grid","Button","Autocomplete","useForm","TextField","Page","airports","airportNames","airportIataList","countries","cities","c","initialState","name","iata","country","city","filterObject","setFilterObject","resetFilters","cityOptions","setCityOptions","newOptions","map","item","push","defaultValues","autocomplete","select","register","handleSubmit","watch","setValue","errors","formState","onSubmit","data","console","log","padding","option","event","params","Boolean","message","airport","toLowerCase"],"mappings":"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","sourcesContent":["import { NextPage } from \"next\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../components/layout\";\r\nimport useApiData, {\r\n  getNames,\r\n  getIataList,\r\n  getCountries,\r\n  getCities,\r\n} from \"../hooks/use-api-data\";\r\nimport Airport from \"../types/airport\";\r\nimport AirportName from \"../types/airport-name\";\r\nimport AirportIata from \"../types/airport-iata\";\r\nimport City from \"../types/city\";\r\nimport Country from \"../types/country\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n// import { useForm, FormProvider, Controller } from \"react-hook-form\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { useForm, NestedValue } from \"react-hook-form\";\r\nimport { TextField, Select } from \"@material-ui/core\";\r\n//import Autocomplete from \"./../components/Autocomplete\";\r\n\r\nconst Page: NextPage = () => {\r\n  let airports; //= useApiData<Airport[]>(\"/api/airports\", []);\r\n  const airportNames = getNames<AirportName[]>(\"/api/names\", []);\r\n  const airportIataList = getIataList<AirportIata[]>(\"/api/iata-list\", []);\r\n  const countries = getCountries<Country[]>(\"/api/countries\", []);\r\n  const cities = getCities<City[]>(\"/api/cities\", [], null);\r\n  //const [cityOptions, setCityOptions] = useState(getCities<City[]>('/api/cities', []))\r\n  //const [cities, setCities] = useState(getCities<City[]>('/api/cities', [], null))\r\n  const c = getCountries<Country[]>(\"/api/countries\", []);\r\n  // const countries = [...new Map(c.map(item => [item[name], item])).values()]\r\n\r\n  const initialState = {\r\n    name: \"\",\r\n    iata: \"\",\r\n    country: \"\",\r\n    city: \"\",\r\n  };\r\n\r\n  const [filterObject, setFilterObject] = useState(initialState);\r\n\r\n  const resetFilters = () => {\r\n    setFilterObject(initialState);\r\n  };\r\n\r\n  const [cityOptions, setCityOptions] = useState(cities);\r\n\r\n  useEffect(() => {\r\n    if (!!filterObject && !!filterObject.country) {\r\n      //let cities = getCities<City[]>('/api/cities', [], filterObject.country)\r\n      let newOptions = [];\r\n      cities.map((item) => {\r\n        if (item.country === filterObject.country) {\r\n          newOptions.push({\r\n            name: item.name,\r\n            country: item.country,\r\n          });\r\n          // return {\r\n          //   name: item.name,\r\n          //   country: item.country\r\n          // }\r\n        }\r\n      });\r\n      setCityOptions(newOptions);\r\n    }\r\n  }, [filterObject]);\r\n\r\n  // const updateCitiesList = (country) =>{\r\n  //   if(!!cityOptions && cityOptions.length > 0){\r\n  //     let newOptions = cityOptions.filter((option) => {\r\n  //       return option.country === country\r\n  //     })\r\n  //     setCityOptions(newOptions)\r\n  //   }\r\n  // }\r\n\r\n  //\r\n  type Option = {\r\n    label: string;\r\n    value: string;\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm<{\r\n    autocomplete: NestedValue<Option[]>;\r\n    select: NestedValue<number[]>;\r\n  }>({\r\n    defaultValues: { autocomplete: [], select: [] },\r\n  });\r\n\r\n  const onSubmit = handleSubmit((data) =>\r\n    console.log(\"onSubmit filterObject\", filterObject)\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <h1 className=\"text-2xl\">&nbsp;&nbsp;Code Challenge: Airports</h1>\r\n      <br />\r\n      <hr />\r\n      <div style={{ padding: \"15px\" }}>\r\n        <form onSubmit={onSubmit}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={3}>\r\n              <Autocomplete\r\n                id=\"name\"\r\n                options={airportNames}\r\n                getOptionLabel={(option: AirportName) => option.name}\r\n                onChange={(event: any, option: AirportName | null) => {\r\n                  setFilterObject({ ...filterObject, ...option });\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    error={Boolean(errors?.autocomplete)}\r\n                    helperText={errors?.autocomplete?.message}\r\n                    label=\"Name\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Autocomplete\r\n                id=\"iata\"\r\n                options={airportIataList}\r\n                getOptionLabel={(option: AirportIata) => option.name}\r\n                onChange={(event: any, option: AirportIata | null) => {\r\n                  setFilterObject({ ...filterObject, ...option });\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    error={Boolean(errors?.autocomplete)}\r\n                    helperText={errors?.autocomplete?.message}\r\n                    label=\"IATA\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Autocomplete\r\n                id=\"country\"\r\n                options={countries}\r\n                getOptionLabel={(option: Country) => option.name}\r\n                onChange={(event: any, option: Country | null) => {\r\n                  setFilterObject({ ...filterObject, ...option });\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    error={Boolean(errors?.autocomplete)}\r\n                    helperText={errors?.autocomplete?.message}\r\n                    label=\"Country\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Autocomplete\r\n                id=\"city\"\r\n                options={cities}\r\n                getOptionLabel={(option: City) => option.name}\r\n                onChange={(event: any, option: City | null) => {\r\n                  setFilterObject({ ...filterObject, ...option });\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    error={Boolean(errors?.autocomplete)}\r\n                    helperText={errors?.autocomplete?.message}\r\n                    label=\"City\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={9}></Grid>\r\n            <Grid item xs={1}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"default\"\r\n                fullWidth\r\n                onClick={() => {\r\n                  resetFilters();\r\n                }}\r\n              >\r\n                Reset\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                fullWidth\r\n              >\r\n                Search\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <hr />\r\n      {/*  */}\r\n      {/*  */}\r\n      <h2 className=\"mt-10 text-xl\">\r\n        &nbsp;&nbsp;List of Airports (Sorted A-Z):\r\n      </h2>\r\n      <div>\r\n        {!!airports &&\r\n          airports.map((airport) => (\r\n            <a\r\n              href={`/airports/${airport.iata.toLowerCase()}`}\r\n              key={airport.iata}\r\n              className=\"mt-5 flex items-center shadow p-5 border\"\r\n            >\r\n              <div>\r\n                {airport.name}, {airport.city}\r\n              </div>\r\n              <div className=\"ml-auto text-mono\">{airport.country}</div>\r\n            </a>\r\n          ))}\r\n        <br />\r\n        {!airports && (\r\n          <h4>\r\n            &nbsp;&nbsp;[ Please click on 'Search' to view the list of Available\r\n            Airports! ]\r\n          </h4>\r\n        )}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}