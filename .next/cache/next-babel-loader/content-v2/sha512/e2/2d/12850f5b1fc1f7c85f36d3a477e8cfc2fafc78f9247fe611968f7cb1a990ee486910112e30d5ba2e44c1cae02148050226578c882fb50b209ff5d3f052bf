{"ast":null,"code":"import _defineProperty from \"C:/Users/KogoKing/entrepreneur/github/maybe-finance/code-challenge-nextjs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\KogoKing\\\\entrepreneur\\\\github\\\\maybe-finance\\\\code-challenge-nextjs\\\\pages\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/layout\";\nimport { getNames, getIataList, getCountries, getCities } from \"../hooks/use-api-data\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\"; // import { useForm, FormProvider, Controller } from \"react-hook-form\";\n\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { useForm } from \"react-hook-form\";\nimport { TextField } from \"@material-ui/core\"; //import Autocomplete from \"./../components/Autocomplete\";\n\nvar Page = function Page() {\n  _s();\n\n  var airports; //= useApiData<Airport[]>(\"/api/airports\", []);\n\n  var airportNames = getNames(\"/api/names\", []);\n  var airportIataList = getIataList(\"/api/iata-list\", []);\n  var countries = getCountries(\"/api/countries\", []);\n  var cities = getCities(\"/api/cities\", [], null); //const [cityOptions, setCityOptions] = useState(getCities<City[]>('/api/cities', []))\n  //const [cities, setCities] = useState(getCities<City[]>('/api/cities', [], null))\n\n  var c = getCountries(\"/api/countries\", []);\n  console.log(\"c\", c); // const countries = [...new Map(c.map(item => [item[name], item])).values()]\n\n  var initialState = {\n    name: \"\",\n    iata: \"\",\n    country: \"\",\n    city: \"\"\n  };\n\n  var _useState = useState(initialState),\n      filterObject = _useState[0],\n      setFilterObject = _useState[1];\n\n  console.log(\"filterObject\", filterObject);\n\n  var resetFilters = function resetFilters() {\n    setFilterObject(initialState);\n  };\n\n  var _useState2 = useState(cities),\n      cityOptions = _useState2[0],\n      setCityOptions = _useState2[1];\n\n  useEffect(function () {\n    if (!!filterObject && !!filterObject.country) {\n      //let cities = getCities<City[]>('/api/cities', [], filterObject.country)\n      var newOptions = [];\n      cities.map(function (item) {\n        console.log(\"item\", item);\n        console.log(\"item.country === filterObject.country\", item.country === filterObject.country);\n\n        if (item.country === filterObject.country) {\n          console.log(\"from IF\", {\n            name: item.name,\n            country: item.country\n          });\n          newOptions.push({\n            name: item.name,\n            country: item.country\n          }); // return {\n          //   name: item.name,\n          //   country: item.country\n          // }\n        }\n      });\n      console.log(\"newOptions\", newOptions);\n      setCityOptions(newOptions);\n    }\n  }, [filterObject]); // const updateCitiesList = (country) =>{\n  //   if(!!cityOptions && cityOptions.length > 0){\n  //     let newOptions = cityOptions.filter((option) => {\n  //       return option.country === country\n  //     })\n  //     setCityOptions(newOptions)\n  //   }\n  // }\n  //\n  // const form = useForm({\n  //   defaultValues: {\n  //     firstName: \"\",\n  //     lastName: \"\",\n  //     age: \"\",\n  //     gender: \"male\",\n  //     hobbies: [\"cooking\", \"coding\"],\n  //   },\n  // });\n  // const onSubmit = (data) => console.log(data);\n  // const onError = (error) => console.log(error);\n  //\n  //\n\n  var options = [{\n    label: \"Chocolate\",\n    value: \"chocolate\"\n  }, {\n    label: \"Strawberry\",\n    value: \"strawberry\"\n  }, {\n    label: \"Vanilla\",\n    value: \"vanilla\"\n  }];\n\n  var _useForm = useForm({\n    defaultValues: {\n      autocomplete: [],\n      select: []\n    }\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch,\n      setValue = _useForm.setValue,\n      errors = _useForm.formState.errors;\n\n  var _useState3 = useState(null),\n      cValue = _useState3[0],\n      setCValue = _useState3[1];\n\n  var onSubmit = handleSubmit(function (data) {\n    return console.log(\"cValue\", cValue);\n  }); //\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl\",\n      children: \"\\xA0\\xA0Code Challenge: Airports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"15px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              options: options,\n              getOptionLabel: function getOptionLabel(option) {\n                return option.label;\n              },\n              onChange: function onChange(e, option) {\n                setCValue(option);\n              },\n              renderInput: function renderInput(params) {\n                var _errors$autocomplete;\n\n                return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n                  error: Boolean(errors === null || errors === void 0 ? void 0 : errors.autocomplete),\n                  helperText: errors === null || errors === void 0 ? void 0 : (_errors$autocomplete = errors.autocomplete) === null || _errors$autocomplete === void 0 ? void 0 : _errors$autocomplete.message\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              id: \"name\",\n              options: airportNames,\n              getOptionLabel: function getOptionLabel(option) {\n                return option.name;\n              },\n              onChange: function onChange(e, option) {\n                setCValue(option);\n              },\n              renderInput: function renderInput(params) {\n                var _errors$autocomplete2;\n\n                return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n                  error: Boolean(errors === null || errors === void 0 ? void 0 : errors.autocomplete),\n                  helperText: errors === null || errors === void 0 ? void 0 : (_errors$autocomplete2 = errors.autocomplete) === null || _errors$autocomplete2 === void 0 ? void 0 : _errors$autocomplete2.message\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              options: options,\n              getOptionLabel: function getOptionLabel(option) {\n                return option.label;\n              },\n              onChange: function onChange(e, option) {\n                setCValue(option);\n              },\n              renderInput: function renderInput(params) {\n                var _errors$autocomplete3;\n\n                return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n                  error: Boolean(errors === null || errors === void 0 ? void 0 : errors.autocomplete),\n                  helperText: errors === null || errors === void 0 ? void 0 : (_errors$autocomplete3 = errors.autocomplete) === null || _errors$autocomplete3 === void 0 ? void 0 : _errors$autocomplete3.message\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              options: options,\n              getOptionLabel: function getOptionLabel(option) {\n                return option.label;\n              },\n              onChange: function onChange(e, option) {\n                setCValue(option);\n              },\n              renderInput: function renderInput(params) {\n                var _errors$autocomplete4;\n\n                return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n                  error: Boolean(errors === null || errors === void 0 ? void 0 : errors.autocomplete),\n                  helperText: errors === null || errors === void 0 ? void 0 : (_errors$autocomplete4 = errors.autocomplete) === null || _errors$autocomplete4 === void 0 ? void 0 : _errors$autocomplete4.message\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 9\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 1,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"default\",\n              fullWidth: true,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: function onClick() {\n                resetFilters();\n              },\n              fullWidth: true,\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-10 text-xl\",\n      children: \"\\xA0\\xA0List of Airports (Sorted A-Z):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!!airports && airports.map(function (airport) {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/airports/\".concat(airport.iata.toLowerCase()),\n          className: \"mt-5 flex items-center shadow p-5 border\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [airport.name, \", \", airport.city]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-auto text-mono\",\n            children: airport.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, _this)]\n        }, airport.iata, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, _this), !airports && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\xA0\\xA0[ Please click on 'Search' to view the list of Available Airports! ]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Page, \"FJK6JXDWdx4uc2ZAJlVZX3VKOAA=\", false, function () {\n  return [useForm];\n});\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["C:/Users/KogoKing/entrepreneur/github/maybe-finance/code-challenge-nextjs/pages/index.tsx"],"names":["React","useState","useEffect","Layout","getNames","getIataList","getCountries","getCities","Grid","Button","Autocomplete","useForm","TextField","Page","airports","airportNames","airportIataList","countries","cities","c","console","log","initialState","name","iata","country","city","filterObject","setFilterObject","resetFilters","cityOptions","setCityOptions","newOptions","map","item","push","options","label","value","defaultValues","autocomplete","select","register","handleSubmit","watch","setValue","errors","formState","cValue","setCValue","onSubmit","data","padding","option","e","params","Boolean","message","airport","toLowerCase"],"mappings":"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","sourcesContent":["import { NextPage } from \"next\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../components/layout\";\r\nimport useApiData, {\r\n  getNames,\r\n  getIataList,\r\n  getCountries,\r\n  getCities,\r\n} from \"../hooks/use-api-data\";\r\nimport Airport from \"../types/airport\";\r\nimport AirportName from \"../types/airport-name\";\r\nimport AirportIata from \"../types/airport-iata\";\r\nimport City from \"../types/city\";\r\nimport Country from \"../types/country\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n// import { useForm, FormProvider, Controller } from \"react-hook-form\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { useForm, NestedValue } from \"react-hook-form\";\r\nimport { TextField, Select } from \"@material-ui/core\";\r\n//import Autocomplete from \"./../components/Autocomplete\";\r\n\r\nconst Page: NextPage = () => {\r\n  let airports; //= useApiData<Airport[]>(\"/api/airports\", []);\r\n  const airportNames = getNames<AirportName[]>(\"/api/names\", []);\r\n  const airportIataList = getIataList<AirportIata[]>(\"/api/iata-list\", []);\r\n  const countries = getCountries<Country[]>(\"/api/countries\", []);\r\n  const cities = getCities<City[]>(\"/api/cities\", [], null);\r\n  //const [cityOptions, setCityOptions] = useState(getCities<City[]>('/api/cities', []))\r\n  //const [cities, setCities] = useState(getCities<City[]>('/api/cities', [], null))\r\n  const c = getCountries<Country[]>(\"/api/countries\", []);\r\n  console.log(\"c\", c);\r\n  // const countries = [...new Map(c.map(item => [item[name], item])).values()]\r\n\r\n  const initialState = {\r\n    name: \"\",\r\n    iata: \"\",\r\n    country: \"\",\r\n    city: \"\",\r\n  };\r\n\r\n  const [filterObject, setFilterObject] = useState(initialState);\r\n  console.log(\"filterObject\", filterObject);\r\n\r\n  const resetFilters = () => {\r\n    setFilterObject(initialState);\r\n  };\r\n\r\n  const [cityOptions, setCityOptions] = useState(cities);\r\n\r\n  useEffect(() => {\r\n    if (!!filterObject && !!filterObject.country) {\r\n      //let cities = getCities<City[]>('/api/cities', [], filterObject.country)\r\n      let newOptions = [];\r\n      cities.map((item) => {\r\n        console.log(\"item\", item);\r\n        console.log(\r\n          \"item.country === filterObject.country\",\r\n          item.country === filterObject.country\r\n        );\r\n        if (item.country === filterObject.country) {\r\n          console.log(\"from IF\", {\r\n            name: item.name,\r\n            country: item.country,\r\n          });\r\n          newOptions.push({\r\n            name: item.name,\r\n            country: item.country,\r\n          });\r\n          // return {\r\n          //   name: item.name,\r\n          //   country: item.country\r\n          // }\r\n        }\r\n      });\r\n      console.log(\"newOptions\", newOptions);\r\n      setCityOptions(newOptions);\r\n    }\r\n  }, [filterObject]);\r\n\r\n  // const updateCitiesList = (country) =>{\r\n  //   if(!!cityOptions && cityOptions.length > 0){\r\n  //     let newOptions = cityOptions.filter((option) => {\r\n  //       return option.country === country\r\n  //     })\r\n  //     setCityOptions(newOptions)\r\n  //   }\r\n  // }\r\n\r\n  //\r\n  // const form = useForm({\r\n  //   defaultValues: {\r\n  //     firstName: \"\",\r\n  //     lastName: \"\",\r\n  //     age: \"\",\r\n  //     gender: \"male\",\r\n  //     hobbies: [\"cooking\", \"coding\"],\r\n  //   },\r\n  // });\r\n\r\n  // const onSubmit = (data) => console.log(data);\r\n  // const onError = (error) => console.log(error);\r\n  //\r\n\r\n  //\r\n  type Option = {\r\n    label: string;\r\n    value: string;\r\n  };\r\n\r\n  const options = [\r\n    { label: \"Chocolate\", value: \"chocolate\" },\r\n    { label: \"Strawberry\", value: \"strawberry\" },\r\n    { label: \"Vanilla\", value: \"vanilla\" },\r\n  ];\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm<{\r\n    autocomplete: NestedValue<Option[]>;\r\n    select: NestedValue<number[]>;\r\n  }>({\r\n    defaultValues: { autocomplete: [], select: [] },\r\n  });\r\n  const [cValue, setCValue] = useState(null);\r\n\r\n  const onSubmit = handleSubmit((data) => console.log(\"cValue\", cValue));\r\n\r\n  //\r\n\r\n  return (\r\n    <Layout>\r\n      <h1 className=\"text-2xl\">&nbsp;&nbsp;Code Challenge: Airports</h1>\r\n      <br />\r\n      <hr />\r\n      <div style={{ padding: \"15px\" }}>\r\n        <form onSubmit={onSubmit}>\r\n          {/* <Autocomplete\r\n            options={options}\r\n            getOptionLabel={(option: Option) => option.label}\r\n            onChange={(e, option) => {\r\n              setCValue(option);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                error={Boolean(errors?.autocomplete)}\r\n                helperText={errors?.autocomplete?.message}\r\n              />\r\n            )}\r\n          /> */}\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={3}>\r\n              <Autocomplete\r\n                options={options}\r\n                getOptionLabel={(option: Option) => option.label}\r\n                onChange={(e, option) => {\r\n                  setCValue(option);\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    error={Boolean(errors?.autocomplete)}\r\n                    helperText={errors?.autocomplete?.message}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Autocomplete\r\n                id=\"name\"\r\n                options={airportNames}\r\n                getOptionLabel={(option: Option) => option.name}\r\n                onChange={(e, option) => {\r\n                  setCValue(option);\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    error={Boolean(errors?.autocomplete)}\r\n                    helperText={errors?.autocomplete?.message}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Autocomplete\r\n                options={options}\r\n                getOptionLabel={(option: Option) => option.label}\r\n                onChange={(e, option) => {\r\n                  setCValue(option);\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    error={Boolean(errors?.autocomplete)}\r\n                    helperText={errors?.autocomplete?.message}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Autocomplete\r\n                options={options}\r\n                getOptionLabel={(option: Option) => option.label}\r\n                onChange={(e, option) => {\r\n                  setCValue(option);\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    error={Boolean(errors?.autocomplete)}\r\n                    helperText={errors?.autocomplete?.message}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={9}></Grid>\r\n            <Grid item xs={1}>\r\n              <Button variant=\"contained\" color=\"default\" fullWidth>\r\n                Reset\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  resetFilters();\r\n                }}\r\n                fullWidth\r\n              >\r\n                Search\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          <input type=\"submit\" />\r\n        </form>\r\n      </div>\r\n      <hr />\r\n      {/*  */}\r\n      {/*  */}\r\n      <h2 className=\"mt-10 text-xl\">\r\n        &nbsp;&nbsp;List of Airports (Sorted A-Z):\r\n      </h2>\r\n      <div>\r\n        {!!airports &&\r\n          airports.map((airport) => (\r\n            <a\r\n              href={`/airports/${airport.iata.toLowerCase()}`}\r\n              key={airport.iata}\r\n              className=\"mt-5 flex items-center shadow p-5 border\"\r\n            >\r\n              <div>\r\n                {airport.name}, {airport.city}\r\n              </div>\r\n              <div className=\"ml-auto text-mono\">{airport.country}</div>\r\n            </a>\r\n          ))}\r\n        <br />\r\n        {!airports && (\r\n          <h4>\r\n            &nbsp;&nbsp;[ Please click on 'Search' to view the list of Available\r\n            Airports! ]\r\n          </h4>\r\n        )}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}