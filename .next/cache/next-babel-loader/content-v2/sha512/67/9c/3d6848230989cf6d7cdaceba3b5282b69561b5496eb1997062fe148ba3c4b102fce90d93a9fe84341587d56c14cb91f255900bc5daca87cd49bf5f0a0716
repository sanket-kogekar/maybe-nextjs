{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"C:/Users/KogoKing/entrepreneur/github/maybe-finance/code-challenge-nextjs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\KogoKing\\\\entrepreneur\\\\github\\\\maybe-finance\\\\code-challenge-nextjs\\\\components\\\\Filters.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nvar top100Films = [{\n  title: \"The Shawshank Redemption\",\n  year: 1994\n}, {\n  title: \"The Godfather\",\n  year: 1972\n}, {\n  title: \"The Godfather: Part II\",\n  year: 1974\n}];\n\nfunction Filters() {\n  var _this = this;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n      id: \"combo-box-demo\",\n      options: top100Films,\n      getOptionLabel: function getOptionLabel(option) {\n        return option.title;\n      },\n      style: {\n        width: 300\n      },\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: \"Combo box\",\n          variant: \"outlined\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      id: \"combo-box-demo\",\n      options: top100Films,\n      getOptionLabel: function getOptionLabel(option) {\n        return option.title;\n      },\n      style: {\n        width: 300\n      },\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: \"Combo box\",\n          variant: \"outlined\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      id: \"combo-box-demo\",\n      options: top100Films,\n      getOptionLabel: function getOptionLabel(option) {\n        return option.title;\n      },\n      style: {\n        width: 300\n      },\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: \"Combo box\",\n          variant: \"outlined\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      id: \"combo-box-demo\",\n      options: top100Films,\n      getOptionLabel: function getOptionLabel(option) {\n        return option.title;\n      },\n      style: {\n        width: 300\n      },\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: \"Combo box\",\n          variant: \"outlined\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Filters;\nexport default Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"sources":["C:/Users/KogoKing/entrepreneur/github/maybe-finance/code-challenge-nextjs/components/Filters.js"],"names":["React","TextField","Autocomplete","top100Films","title","year","Filters","option","width","params"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,IAAMC,WAAW,GAAG,CAClB;AAAEC,EAAAA,KAAK,EAAE,0BAAT;AAAqCC,EAAAA,IAAI,EAAE;AAA3C,CADkB,EAElB;AAAED,EAAAA,KAAK,EAAE,eAAT;AAA0BC,EAAAA,IAAI,EAAE;AAAhC,CAFkB,EAGlB;AAAED,EAAAA,KAAK,EAAE,wBAAT;AAAmCC,EAAAA,IAAI,EAAE;AAAzC,CAHkB,CAApB;;AAMA,SAASC,OAAT,GAAmB;AAAA;;AACjB,sBACE;AAAA,4BACE,QAAC,YAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,OAAO,EAAEH,WAFX;AAGE,MAAA,cAAc,EAAE,wBAACI,MAAD;AAAA,eAAYA,MAAM,CAACH,KAAnB;AAAA,OAHlB;AAIE,MAAA,KAAK,EAAE;AAAEI,QAAAA,KAAK,EAAE;AAAT,OAJT;AAKE,MAAA,WAAW,EAAE,qBAACC,MAAD;AAAA,4BACX,QAAC,SAAD,kCAAeA,MAAf;AAAuB,UAAA,KAAK,EAAC,WAA7B;AAAyC,UAAA,OAAO,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,iBADW;AAAA;AALf;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,YAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,OAAO,EAAEN,WAFX;AAGE,MAAA,cAAc,EAAE,wBAACI,MAAD;AAAA,eAAYA,MAAM,CAACH,KAAnB;AAAA,OAHlB;AAIE,MAAA,KAAK,EAAE;AAAEI,QAAAA,KAAK,EAAE;AAAT,OAJT;AAKE,MAAA,WAAW,EAAE,qBAACC,MAAD;AAAA,4BACX,QAAC,SAAD,kCAAeA,MAAf;AAAuB,UAAA,KAAK,EAAC,WAA7B;AAAyC,UAAA,OAAO,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,iBADW;AAAA;AALf;AAAA;AAAA;AAAA;AAAA,YAXF,eAqBE,QAAC,YAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,OAAO,EAAEN,WAFX;AAGE,MAAA,cAAc,EAAE,wBAACI,MAAD;AAAA,eAAYA,MAAM,CAACH,KAAnB;AAAA,OAHlB;AAIE,MAAA,KAAK,EAAE;AAAEI,QAAAA,KAAK,EAAE;AAAT,OAJT;AAKE,MAAA,WAAW,EAAE,qBAACC,MAAD;AAAA,4BACX,QAAC,SAAD,kCAAeA,MAAf;AAAuB,UAAA,KAAK,EAAC,WAA7B;AAAyC,UAAA,OAAO,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,iBADW;AAAA;AALf;AAAA;AAAA;AAAA;AAAA,YArBF,eA+BE,QAAC,YAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,OAAO,EAAEN,WAFX;AAGE,MAAA,cAAc,EAAE,wBAACI,MAAD;AAAA,eAAYA,MAAM,CAACH,KAAnB;AAAA,OAHlB;AAIE,MAAA,KAAK,EAAE;AAAEI,QAAAA,KAAK,EAAE;AAAT,OAJT;AAKE,MAAA,WAAW,EAAE,qBAACC,MAAD;AAAA,4BACX,QAAC,SAAD,kCAAeA,MAAf;AAAuB,UAAA,KAAK,EAAC,WAA7B;AAAyC,UAAA,OAAO,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,iBADW;AAAA;AALf;AAAA;AAAA;AAAA;AAAA,YA/BF;AAAA,kBADF;AA2CD;;KA5CQH,O;AA8CT,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst top100Films = [\r\n  { title: \"The Shawshank Redemption\", year: 1994 },\r\n  { title: \"The Godfather\", year: 1972 },\r\n  { title: \"The Godfather: Part II\", year: 1974 },\r\n];\r\n\r\nfunction Filters() {\r\n  return (\r\n    <>\r\n      <Autocomplete\r\n        id=\"combo-box-demo\"\r\n        options={top100Films}\r\n        getOptionLabel={(option) => option.title}\r\n        style={{ width: 300 }}\r\n        renderInput={(params) => (\r\n          <TextField {...params} label=\"Combo box\" variant=\"outlined\" />\r\n        )}\r\n      />\r\n\r\n      <Autocomplete\r\n        id=\"combo-box-demo\"\r\n        options={top100Films}\r\n        getOptionLabel={(option) => option.title}\r\n        style={{ width: 300 }}\r\n        renderInput={(params) => (\r\n          <TextField {...params} label=\"Combo box\" variant=\"outlined\" />\r\n        )}\r\n      />\r\n\r\n      <Autocomplete\r\n        id=\"combo-box-demo\"\r\n        options={top100Films}\r\n        getOptionLabel={(option) => option.title}\r\n        style={{ width: 300 }}\r\n        renderInput={(params) => (\r\n          <TextField {...params} label=\"Combo box\" variant=\"outlined\" />\r\n        )}\r\n      />\r\n\r\n      <Autocomplete\r\n        id=\"combo-box-demo\"\r\n        options={top100Films}\r\n        getOptionLabel={(option) => option.title}\r\n        style={{ width: 300 }}\r\n        renderInput={(params) => (\r\n          <TextField {...params} label=\"Combo box\" variant=\"outlined\" />\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filters;\r\n"]},"metadata":{},"sourceType":"module"}