{"ast":null,"code":"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nexport const useApiData = (path, defaultValue, filters) => {\n  const {\n    0: data,\n    1: setData\n  } = useState(defaultValue);\n  useEffect(() => {\n    axios.get(path).catch(err => err.response).then(response => {\n      setData(response.data);\n    });\n  }, []);\n  return data;\n};\nexport const getNames = (path, defaultValue) => {\n  const {\n    0: names,\n    1: setNames\n  } = useState(defaultValue);\n  useEffect(() => {\n    axios.get(path).catch(err => err.response).then(response => {\n      setNames(response.data);\n    });\n  }, []);\n  return names;\n};\nexport const getIataList = (path, defaultValue) => {\n  const {\n    0: airportIataList,\n    1: setAirportIataList\n  } = useState(defaultValue);\n  useEffect(() => {\n    axios.get(path).catch(err => err.response).then(response => {\n      setAirportIataList(response.data);\n    });\n  }, []);\n  return airportIataList;\n};\nexport const getCountries = (path, defaultValue) => {\n  const {\n    0: countries,\n    1: setCountries\n  } = useState(defaultValue);\n  useEffect(() => {\n    axios.get(path).catch(err => err.response).then(response => {\n      setCountries(response.data);\n    });\n  }, []);\n  return countries;\n};\nexport const getCities = (path, defaultValue, country) => {\n  const {\n    0: cities,\n    1: setCities\n  } = useState(defaultValue);\n  useEffect(() => {\n    axios.get(path).catch(err => err.response).then(response => {\n      setCities(response.data);\n    });\n  }, []);\n  return cities;\n};\nexport default useApiData;","map":{"version":3,"sources":["C:/Users/KogoKing/entrepreneur/github/maybe-finance/code-challenge-nextjs/hooks/use-api-data.ts"],"names":["axios","useEffect","useState","useApiData","path","defaultValue","filters","data","setData","get","catch","err","response","then","getNames","names","setNames","getIataList","airportIataList","setAirportIataList","getCountries","countries","setCountries","getCities","country","cities","setCities"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,UAAU,GAAG,CACxBC,IADwB,EAExBC,YAFwB,EAGxBC,OAHwB,KAIlB;AACN,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAIG,YAAJ,CAAhC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,KAAK,CACFS,GADH,CACUL,IADV,EAEGM,KAFH,CAEUC,GAAD,IAASA,GAAG,CAACC,QAFtB,EAGGC,IAHH,CAGSD,QAAD,IAAc;AAClBJ,MAAAA,OAAO,CAACI,QAAQ,CAACL,IAAV,CAAP;AACD,KALH;AAMD,GAPQ,EAON,EAPM,CAAT;AAUA,SAAOA,IAAP;AACD,CAlBM;AAoBP,OAAO,MAAMO,QAAQ,GAAG,CAAIV,IAAJ,EAAkBC,YAAlB,KAA2C;AACjE,QAAM;AAAA,OAACU,KAAD;AAAA,OAAQC;AAAR,MAAoBd,QAAQ,CAAIG,YAAJ,CAAlC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,KAAK,CACFS,GADH,CACUL,IADV,EAEGM,KAFH,CAEUC,GAAD,IAASA,GAAG,CAACC,QAFtB,EAGGC,IAHH,CAGSD,QAAD,IAAc;AAClBI,MAAAA,QAAQ,CAACJ,QAAQ,CAACL,IAAV,CAAR;AACD,KALH;AAMD,GAPQ,EAON,EAPM,CAAT;AASA,SAAOQ,KAAP;AACD,CAbM;AAeP,OAAO,MAAME,WAAW,GAAG,CAAIb,IAAJ,EAAkBC,YAAlB,KAA2C;AACpE,QAAM;AAAA,OAACa,eAAD;AAAA,OAAkBC;AAAlB,MAAwCjB,QAAQ,CAAIG,YAAJ,CAAtD;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,KAAK,CACFS,GADH,CACUL,IADV,EAEGM,KAFH,CAEUC,GAAD,IAASA,GAAG,CAACC,QAFtB,EAGGC,IAHH,CAGSD,QAAD,IAAc;AAClBO,MAAAA,kBAAkB,CAACP,QAAQ,CAACL,IAAV,CAAlB;AACD,KALH;AAMD,GAPQ,EAON,EAPM,CAAT;AASA,SAAOW,eAAP;AACD,CAbM;AAeP,OAAO,MAAME,YAAY,GAAG,CAAIhB,IAAJ,EAAkBC,YAAlB,KAA2C;AACrE,QAAM;AAAA,OAACgB,SAAD;AAAA,OAAYC;AAAZ,MAA4BpB,QAAQ,CAAIG,YAAJ,CAA1C;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,KAAK,CACFS,GADH,CACUL,IADV,EAEGM,KAFH,CAEUC,GAAD,IAASA,GAAG,CAACC,QAFtB,EAGGC,IAHH,CAGSD,QAAD,IAAc;AAClBU,MAAAA,YAAY,CAACV,QAAQ,CAACL,IAAV,CAAZ;AACD,KALH;AAMD,GAPQ,EAON,EAPM,CAAT;AASA,SAAOc,SAAP;AACD,CAbM;AAeP,OAAO,MAAME,SAAS,GAAG,CACvBnB,IADuB,EAEvBC,YAFuB,EAGvBmB,OAHuB,KAIjB;AACN,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBxB,QAAQ,CAAIG,YAAJ,CAApC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,KAAK,CACFS,GADH,CACUL,IADV,EAEGM,KAFH,CAEUC,GAAD,IAASA,GAAG,CAACC,QAFtB,EAGGC,IAHH,CAGSD,QAAD,IAAc;AAClBc,MAAAA,SAAS,CAACd,QAAQ,CAACL,IAAV,CAAT;AACD,KALH;AAMD,GAPQ,EAON,EAPM,CAAT;AASA,SAAOkB,MAAP;AACD,CAjBM;AAmBP,eAAetB,UAAf","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const useApiData = <T>(\r\n  path: string,\r\n  defaultValue: any,\r\n  filters: any\r\n): T => {\r\n  const [data, setData] = useState<T>(defaultValue);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get<T>(path)\r\n      .catch((err) => err.response)\r\n      .then((response) => {\r\n        setData(response.data);\r\n      });\r\n  }, []);\r\n\r\n\r\n  return data;\r\n};\r\n\r\nexport const getNames = <T>(path: string, defaultValue: any): T => {\r\n  const [names, setNames] = useState<T>(defaultValue);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get<T>(path)\r\n      .catch((err) => err.response)\r\n      .then((response) => {\r\n        setNames(response.data);\r\n      });\r\n  }, []);\r\n\r\n  return names;\r\n};\r\n\r\nexport const getIataList = <T>(path: string, defaultValue: any): T => {\r\n  const [airportIataList, setAirportIataList] = useState<T>(defaultValue);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get<T>(path)\r\n      .catch((err) => err.response)\r\n      .then((response) => {\r\n        setAirportIataList(response.data);\r\n      });\r\n  }, []);\r\n\r\n  return airportIataList;\r\n};\r\n\r\nexport const getCountries = <T>(path: string, defaultValue: any): T => {\r\n  const [countries, setCountries] = useState<T>(defaultValue);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get<T>(path)\r\n      .catch((err) => err.response)\r\n      .then((response) => {\r\n        setCountries(response.data);\r\n      });\r\n  }, []);\r\n\r\n  return countries;\r\n};\r\n\r\nexport const getCities = <T>(\r\n  path: string,\r\n  defaultValue: any,\r\n  country: any\r\n): T => {\r\n  const [cities, setCities] = useState<T>(defaultValue);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get<T>(path)\r\n      .catch((err) => err.response)\r\n      .then((response) => {\r\n        setCities(response.data);\r\n      });\r\n  }, []);\r\n\r\n  return cities;\r\n};\r\n\r\nexport default useApiData;\r\n"]},"metadata":{},"sourceType":"module"}